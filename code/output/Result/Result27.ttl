@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix ex: <http://acme.com/resources/> .
ex:Result rdf:type rdfs:Class .
ex:hasResult rdf:type rdf:Property ;
         rdfs:domain ex:Test ;
         rdfs:range ex:Result .
ex:Test rdf:type rdfs:Class .
ex:hasValue rdf:type rdf:Property ;
           rdfs:domain ex:Result ;
           rdfs:range rdf:Literal .
ex:hasUnits rdf:type rdf:Property ;
            rdfs:domain ex:Result ;
            rdfs:range rdf:Literal .
ex:hasDateTime rdf:type rdf:Property ;
               rdfs:domain ex:Result ;
               rdfs:range rdf:Literal .
 This ontology describes a Result, which is produced from a Test. The Result has properties such as a value, a unit, and a date/time. Of course, real-world use cases would require more complex models including precision, equipment used, etc. and perhaps link to established vocabularies for these things. The units could also refer to a list of standard units, instead of being literals.