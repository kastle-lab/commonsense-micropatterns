Sure, below is a simple ontology representation of the concept "Teacher".
Class: Teacher  Subclass of: Human  Object Properties:     Teaches (Domain: Teacher, Range: Course)    Works at (Domain: Teacher, Range: School/University)Data Property of Teacher:    HasFirstName (Domain: Teacher, Range: string)    HasLastName (Domain: Teacher, Range: string)    HasEmail (Domain: Teacher, Range: string)Instance: Mrs.Johnson  Type: Teacher  HasFirstName: "Nina"  HasLastName: "Johnson"  HasEmail : "nina.johnson@example.com"  Teaches: "Math101"  Works at: "XYZ University"  Notes: - This is a simple view and could be extended with more specific concepts (e.g., "Primary School Teacher", "High School Teacher", adjunct, full-time etc.).- Similarly, more properties could be added (e.g., HasPhoneNumber, HasOfficeHours).- The Course and School/University also would have their own classes with their own properties.- This follows the traditional structure of ontology with classes, instances, data properties (for traits that hold a single value for each instance like names and contact details), and object properties (for traits that link instances of one class with another like Works at and Teaches).