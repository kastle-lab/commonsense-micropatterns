 This is of course a very generic framework and each "Issue" has properties such as identifier, title, description and status. It could also be linked with a person acting as creator:
@prefix ex: <http://example.com/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
# Define the class of Issueex:Issue rdf:type rdfs:Class .
# Define properties related to Issueex:identifier rdf:type rdf:Property ;
    rdfs:domain ex:Issue ;
    rdfs:range xsd:string .
ex:title rdf:type rdf:Property ;
    rdfs:domain ex:Issue ;
    rdfs:range xsd:string .
    ex:description rdf:type rdf:Property ;
    rdfs:domain ex:Issue ;
    rdfs:range xsd:string .
 ex:status rdf:type rdf:Property ;
    rdfs:domain ex:Issue ;
    rdfs:range xsd:string .
# Define a class for Person ex:Person rdf:type rdfs:Class .
# Define property creator which links Issue to Personex:creator rdf:type rdf:Property ;
    rdfs:domain ex:Issue ;
    rdfs:range ex:Person .
