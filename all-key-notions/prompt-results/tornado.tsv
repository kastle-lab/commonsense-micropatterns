tornado	Construct an ontology focused on the following: tornado. Provide it in valid Turtle/RDF format, excluding any extra text.	```turtle@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .@prefix ex: <http://example.org/> .ex:Tornado a rdfs:Class .ex:formationProcess a rdf:Property;  rdfs:domain ex:Tornado ;  rdfs:range rdfs:Literal .ex:fujitaScale a rdf:Property ;  rdfs:domain ex:Tornado ;  rdfs:range rdfs:Literal .ex:location a rdf:Property ;  rdfs:domain ex:Tornado ;  rdfs:range rdfs:Literal .ex:duration a rdf:Property ;  rdfs:domain ex:Tornado ;  rdfs:range rdfs:Literal .ex:deathToll a rdf:Property ;  rdfs:domain ex:Tornado ;  rdfs:range rdfs:Literal .```The ontology above contains a class `Tornado`, and some properties related to it - `formationProcess`, `fujitaScale` (the scale to measure the intensity of a tornado), `location`, `duration`, and `deathToll`. The domain of all these properties is the class `Tornado`, and the range is `rdfs:Literal`. To keep the ontology simple and focused, many potential properties (like `causalFactors`, `damageCost`, `warningTime`, among others) and additional classes (like `Country`, `City`, among others) are excluded. Similarly, the ontology does not wrap literals (like `duration`, `deathToll`) using suitable classes or datatypes. For instance, `duration` could be represented using classes like `xsd:Duration` and `deathToll` could be represented using classes like `xsd:integer`. The range of `location` can also link to a geolocation ontology rather than a literal.