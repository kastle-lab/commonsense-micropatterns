software package	Construct an ontology focused on the following: software package. Provide it in valid Turtle/RDF format, excluding any extra text.	Here is a simple ontology of a software package provided in Turtle/RDF format.```@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .@prefix owl: <http://www.w3.org/2002/07/owl#> .@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .@prefix swp: <http://www.example.org/softwarePackage#> .swp:SoftwarePackage rdf:type rdfs:Class .swp:hasName rdf:type rdf:Property ;    rdfs:domain swp:SoftwarePackage ;    rdfs:range xsd:string .swp:hasVersion rdf:type rdf:Property ;    rdfs:domain swp:SoftwarePackage ;    rdfs:range xsd:string .swp:belongsToCategory rdf:type rdf:Property ;    rdfs:domain swp:SoftwarePackage ;    rdfs:range swp:SoftwareCategory .swp:SoftwareCategory rdf:type rdfs:Class .swp:hasName rdf:type rdf:Property ;    rdfs:domain swp:SoftwareCategory ;    rdfs:range xsd:string .```This hypothetical ontology describes a software package (`swp:SoftwarePackage`) with a name (`swp:hasName`) and version number (`swp:hasVersion`). The software package is also associated with a category (`swp:belongsToCategory`) defined as `swp:SoftwareCategory`, which also has a name property (`swp:hasName`). Remember that this is just a simple representation and real-world ontology for a software package could be much more complex.
